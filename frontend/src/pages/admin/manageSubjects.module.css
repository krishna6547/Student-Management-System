/* manageSubjects.module.css - All class names converted to camelCase for CSS module convention */

.manageSubjectsContainer {
  min-height: 100vh;
  background: linear-gradient(135deg, #8B5CF6 0%, #6366F1 50%, #3B82F6 100%);
  position: relative;
  overflow-x: hidden;
  /* padding-top: 80px; */
}

.manageSubjectsContainer::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="20" height="20" patternUnits="userSpaceOnUse"><path d="M 20 0 L 0 0 0 20" fill="none" stroke="rgba(255,255,255,0.05)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
  opacity: 0.4;
  z-index: 1;
}

.subjectsContent {
  position: relative;
  z-index: 2;
  max-width: 1400px;
  margin: 0 auto;
  padding: 40px 20px;
}

.subjectsHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 50px;
  animation: fadeInDown 1s ease-out;
}

.headerLeft h1.pageTitle {
  font-size: 3rem;
  font-weight: 800;
  background: linear-gradient(135deg, #ffffff 0%, #e2e8f0 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  margin-bottom: 8px;
  line-height: 1.1;
}

.pageSubtitle {
  font-size: 1.1rem;
  color: rgba(255, 255, 255, 0.8);
  margin: 0;
}

.addSubjectBtn {
  background: linear-gradient(135deg, #ffffff 0%, #f1f5f9 100%);
  color: #8B5CF6;
  border: none;
  padding: 15px 25px;
  border-radius: 15px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  gap: 10px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
}

.addSubjectBtn svg {
  width: 20px;
  height: 20px;
}

.addSubjectBtn:hover {
  transform: translateY(-3px);
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);
  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
}

.subjectsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: 30px;
}

.subjectCard {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 20px;
  padding: 30px 25px;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  cursor: pointer;
  animation: fadeInUp 1s ease-out;
  animation-fill-mode: both;
  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
}

.subjectCard::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: linear-gradient(90deg, #8B5CF6, #6366F1, #3B82F6);
  transform: scaleX(0);
  transform-origin: left;
  transition: transform 0.4s ease;
}

.subjectCard:hover::before {
  transform: scaleX(1);
}

.subjectCard:hover {
  transform: translateY(-10px) scale(1.02);
  box-shadow: 0 25px 50px rgba(139, 92, 246, 0.2);
  background: rgba(255, 255, 255, 1);
}

.cardBackground {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle at top right, rgba(139, 92, 246, 0.05) 0%, transparent 50%);
  opacity: 0;
  transition: opacity 0.4s ease;
  pointer-events: none;
}

.subjectCard:hover .cardBackground {
  opacity: 1;
}

.cardGlow {
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: conic-gradient(from 0deg, transparent, rgba(139, 92, 246, 0.1), transparent, rgba(99, 102, 241, 0.1), transparent);
  animation: rotate 8s linear infinite;
  opacity: 0;
  transition: opacity 0.4s ease;
  pointer-events: none;
}

.subjectCard:hover .cardGlow {
  opacity: 1;
}

/* Card Actions */
.cardActions {
  position: absolute;
  top: 15px;
  right: 15px;
  display: flex;
  gap: 8px;
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 3;
}

.subjectCard:hover .cardActions {
  opacity: 1;
}

.editBtn, .removeBtn {
  background: rgba(255, 255, 255, 0.9);
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  padding: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(10px);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.editBtn {
  border-color: rgba(59, 130, 246, 0.3);
}

.editBtn:hover {
  background: rgba(59, 130, 246, 0.1);
  border-color: rgba(59, 130, 246, 0.4);
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.2);
}

.editBtn svg {
  width: 16px;
  height: 16px;
  color: #3b82f6;
}

.removeBtn {
  border-color: rgba(239, 68, 68, 0.3);
}

.removeBtn:hover {
  background: rgba(239, 68, 68, 0.1);
  border-color: rgba(239, 68, 68, 0.4);
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(239, 68, 68, 0.2);
}

.removeBtn svg {
  width: 16px;
  height: 16px;
  color: #ef4444;
}

.subjectIcon {
  width: 60px;
  height: 60px;
  background: linear-gradient(135deg, #8B5CF6, #6366F1);
  border-radius: 15px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  margin-bottom: 20px;
  transition: all 0.4s ease;
  position: relative;
  z-index: 2;
}

.subjectIcon svg {
  width: 28px;
  height: 28px;
}

.subjectCard:hover .subjectIcon {
  transform: scale(1.1) rotate(-5deg);
  background: linear-gradient(135deg, #7C3AED, #5B21B6);
}

.subjectContent {
  position: relative;
  z-index: 2;
}

.subjectName {
  font-size: 1.4rem;
  font-weight: 700;
  color: #1E293B;
  margin-bottom: 15px;
  transition: color 0.3s ease;
}

.subjectCard:hover .subjectName {
  color: #8B5CF6;
}

.subjectStats {
  display: flex;
  align-items: center;
  gap: 20px;
}

.statItem {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.statNumber {
  font-size: 1.5rem;
  font-weight: 700;
  color: #1E293B;
  line-height: 1;
}

.statLabel {
  font-size: 0.8rem;
  color: #64748B;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-top: 4px;
}

.statDivider {
  width: 1px;
  height: 30px;
  background: #E2E8F0;
}

.emptyState {
  grid-column: 1 / -1;
  text-align: center;
  padding: 60px 20px;
  color: rgba(255, 255, 255, 0.8);
}

.emptyState svg {
  width: 80px;
  height: 80px;
  margin-bottom: 20px;
  opacity: 0.6;
}

.emptyState h3 {
  font-size: 1.5rem;
  margin-bottom: 10px;
  color: white;
}

.emptyState p {
  font-size: 1rem;
  opacity: 0.7;
}

/* Loading container with glassmorphism effect */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 400px;
  color: rgba(255, 255, 255, 0.9);
  animation: fadeInUp 1s ease-out;
}

.loadingContainer .spinner {
  width: 50px;
  height: 50px;
  border: 4px solid rgba(255, 255, 255, 0.2);
  border-top: 4px solid rgba(255, 255, 255, 0.9);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 20px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
}

.loadingContainer p {
  font-size: 1.1rem;
  font-weight: 500;
  opacity: 0.8;
}

/* Error message with glassmorphism design */
.errorMessage {
  display: flex;
  align-items: center;
  gap: 15px;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(239, 68, 68, 0.2);
  border-radius: 15px;
  padding: 20px;
  margin-bottom: 30px;
  color: #dc2626;
  font-weight: 600;
  position: relative;
  animation: slideInDown 0.4s ease-out;
  box-shadow: 0 10px 30px rgba(239, 68, 68, 0.1);
}

.errorMessage::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(90deg, #dc2626, #ef4444);
  border-radius: 15px 15px 0 0;
}

.errorMessage svg {
  width: 22px;
  height: 22px;
  flex-shrink: 0;
  color: #dc2626;
}

.errorClose {
  background: rgba(239, 68, 68, 0.1);
  border: none;
  color: #dc2626;
  font-size: 18px;
  font-weight: bold;
  cursor: pointer;
  padding: 0;
  margin-left: auto;
  width: 28px;
  height: 28px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: all 0.3s ease;
}

.errorClose:hover {
  background: rgba(239, 68, 68, 0.2);
  transform: scale(1.1);
}

/* Modal Styles */
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(8px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  animation: fadeIn 0.3s ease-out;
}

.modalContent {
  background: white;
  border-radius: 20px;
  padding: 0;
  max-width: 500px;
  width: 90%;
  max-height: 90vh;
  overflow: auto;
  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
  animation: slideUp 0.3s ease-out;
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 30px 30px 20px;
  border-bottom: 1px solid #E2E8F0;
}

.modalHeader h2 {
  font-size: 1.5rem;
  font-weight: 700;
  color: #1E293B;
  margin: 0;
}

.closeBtn {
  background: none;
  border: none;
  color: #64748B;
  cursor: pointer;
  padding: 5px;
  border-radius: 50%;
  transition: all 0.2s ease;
}

.closeBtn:hover {
  background: #F1F5F9;
  color: #1E293B;
}

.closeBtn svg {
  width: 20px;
  height: 20px;
}

.formGroup {
  padding: 30px;
}

.formGroup label {
  display: block;
  font-size: 1rem;
  font-weight: 600;
  color: #374151;
  margin-bottom: 8px;
}

.formGroup input {
  width: 100%;
  padding: 15px;
  border: 2px solid #E5E7EB;
  border-radius: 10px;
  font-size: 1rem;
  transition: all 0.3s ease;
  background: #F9FAFB;
  box-sizing: border-box;
}

.formGroup input:focus {
  outline: none;
  border-color: #8B5CF6;
  background: white;
  box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);
}

/* Form Row for side-by-side inputs */
.formRow {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
  padding: 0 30px;
  margin-bottom: 20px;
}

.formRow .formGroup {
  padding: 0;
}

/* Enhanced form styling for number inputs */
.formGroup input[type="number"] {
  appearance: textfield;
  -moz-appearance: textfield;
}

.formGroup input[type="number"]::-webkit-outer-spin-button,
.formGroup input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.modalActions {
  display: flex;
  gap: 15px;
  padding: 20px 30px 30px;
}

.cancelBtn, .submitBtn {
  flex: 1;
  padding: 12px 20px;
  border-radius: 10px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
}

.cancelBtn {
  background: #F1F5F9;
  color: #64748B;
  border: none;
}

.cancelBtn:hover {
  background: #E2E8F0;
}

.submitBtn {
  background: linear-gradient(135deg, #8B5CF6, #6366F1);
  color: white;
  border: none;
}

.submitBtn:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 10px 25px rgba(139, 92, 246, 0.3);
}

.submitBtn:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.spinner {
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top: 2px solid white;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

/* Modal error with consistent styling */
.modalError {
  background: rgba(239, 68, 68, 0.1);
  border: 1px solid rgba(239, 68, 68, 0.2);
  border-radius: 10px;
  padding: 15px 18px;
  margin: 0 30px 20px;
  color: #dc2626;
  font-size: 0.95rem;
  font-weight: 600;
  position: relative;
  animation: slideIn 0.3s ease-out;
}

.modalError::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: #dc2626;
  border-radius: 10px 10px 0 0;
}

/* Animations */
@keyframes fadeInDown {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes slideUp {
  0% {
    transform: translateY(30px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-15px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-20px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Success animation for newly added subjects */
@keyframes successPulse {
  0% { 
    transform: scale(1);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
  }
  50% { 
    transform: scale(1.03);
    box-shadow: 0 20px 40px rgba(139, 92, 246, 0.3);
  }
  100% { 
    transform: scale(1);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
  }
}

.subjectCard.newlyAdded {
  animation: successPulse 0.6s ease-out;
}

.subjectCard.newlyAdded::before {
  transform: scaleX(1);
  background: linear-gradient(90deg, #10b981, #34d399);
}

/* Responsive Design */
@media (max-width: 768px) {
  .subjectsHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: 20px;
  }
  
  .headerLeft h1.pageTitle {
    font-size: 2.2rem;
  }
  
  .subjectsGrid {
    grid-template-columns: 1fr;
    gap: 20px;
  }
  
  .addSubjectBtn {
    align-self: stretch;
    justify-content: center;
  }
  
  .formRow {
    grid-template-columns: 1fr;
    gap: 15px;
  }
  
  .cardActions {
    opacity: 1; /* Always show on mobile */
  }
  
  .editBtn, .removeBtn {
    padding: 10px;
  }
  
  .editBtn svg, .removeBtn svg {
    width: 18px;
    height: 18px;
  }
  
  .errorMessage {
    flex-direction: column;
    align-items: flex-start;
    gap: 12px;
    padding: 18px;
  }
  
  .errorClose {
    position: absolute;
    top: 15px;
    right: 15px;
    margin-left: 0;
  }
  
  .loadingContainer {
    min-height: 300px;
    padding: 20px;
  }
  
  .loadingContainer .spinner {
    width: 40px;
    height: 40px;
    border-width: 3px;
  }
}

@media (max-width: 480px) {
  .subjectsContent {
    padding: 30px 15px;
  }
  
  .headerLeft h1.pageTitle {
    font-size: 1.8rem;
  }
  
  .subjectCard {
    padding: 25px 20px;
  }
  
  .modalContent {
    width: 95%;
  }
  
  .modalHeader, .formGroup, .modalActions {
    padding-left: 20px;
    padding-right: 20px;
  }
  
  .formRow {
    padding: 0 20px;
  }
  
  .modalError {
    margin: 0 20px 20px;
    padding: 12px 15px;
    font-size: 0.9rem;
  }
  
  .errorMessage {
    padding: 15px;
    border-radius: 12px;
  }
}
